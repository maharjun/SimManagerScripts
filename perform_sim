#!/usr/bin/env bash

# EDGE CASES: If the commit of the simulation is the commit where a .gitignore
# file exists but is yet untracked, this could lead to all sorts of problems

# call this function to write to stderr
shopt -s dotglob  # critical in order to copy everything

echo_stderr ()
{
    echo "$@" >&2
}

SOURCE="${BASH_SOURCE[0]}"
SOURCE=$(readlink -f "$SOURCE")
SOURCE_DIR=$(dirname "$SOURCE")

sim_prep_dir_arg="$1"

echo "================================="$(echo -n "$sim_prep_dir_arg" | sed 's/./=/g')
echo "Unpacking Simulation in directory $sim_prep_dir_arg"
echo "================================="$(echo -n "$sim_prep_dir_arg" | sed 's/./=/g')

unpack_output=$($SOURCE_DIR/unpack_sim_dir "$@")
err_code=$?
if [[ $err_code -ne 0 ]]; then
    echo_stderr "Failed to unpack the sim directory $1 :("
    exit $err_code
fi
unpack_output="$(tac <<< "$unpack_output")"
mapfile -t return_array <<< "$unpack_output"
sim_preparation_dir="${return_array[2]}"
temp_sim_working_dir="${return_array[1]}"
temp_repo_directory="${return_array[0]}"

echo "temp_sim_working_dir = $temp_sim_working_dir"
echo "temp_repo_directory = $temp_repo_directory"
echo "sim_preparation_dir = $sim_preparation_dir"

# Run the command stored in the 
pushd $temp_sim_working_dir > /dev/null &&
    mapfile -t command_array < "$sim_preparation_dir/command" &&
    (echo_stderr "Running The following command:";
     echo_stderr "=============================================================";
     echo_stderr "${command_array[@]}";
     echo_stderr "=============================================================") &&

    "${command_array[@]}"

    err_code=$?
    if [[ $err_code -ne 0 ]]; then
        echo_stderr "The simulation exited with some error"
    else
        echo "completed simulation $sim_prep_dir_arg"
    fi
    rm -rf $temp_repo_directory
    exit $err_code
popd > /dev/null
